// <auto-generated />
using EasyChords.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyChords.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200707225448_Addedmorekeysandchords")]
    partial class Addedmorekeysandchords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyChords.Models.Chord", b =>
                {
                    b.Property<int>("ChordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChordName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMajor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNatural")
                        .HasColumnType("bit");

                    b.Property<int>("MusicalKeyId")
                        .HasColumnType("int");

                    b.HasKey("ChordId");

                    b.HasIndex("MusicalKeyId");

                    b.ToTable("Chords");

                    b.HasData(
                        new
                        {
                            ChordId = 1,
                            ChordName = "C Major",
                            ImageUrl = "https://chordify.net/img/diagrams/piano/C_maj.png",
                            IsMajor = true,
                            IsNatural = true,
                            MusicalKeyId = 1
                        },
                        new
                        {
                            ChordId = 2,
                            ChordName = "C Minor",
                            ImageUrl = "https://chordify.net/img/diagrams/piano/C_min.png",
                            IsMajor = false,
                            IsNatural = true,
                            MusicalKeyId = 2
                        },
                        new
                        {
                            ChordId = 3,
                            ChordName = "C#/Db Major",
                            ImageUrl = "https://chordify.net/img/diagrams/piano/Cs_maj.png",
                            IsMajor = true,
                            IsNatural = false,
                            MusicalKeyId = 3
                        },
                        new
                        {
                            ChordId = 4,
                            ChordName = "C#/Db Minor",
                            ImageUrl = "https://chordify.net/img/diagrams/piano/Cs_min.png",
                            IsMajor = false,
                            IsNatural = false,
                            MusicalKeyId = 4
                        },
                        new
                        {
                            ChordId = 5,
                            ChordName = "D Major",
                            ImageUrl = "https://chordify.net/img/diagrams/piano/D_maj.png",
                            IsMajor = true,
                            IsNatural = true,
                            MusicalKeyId = 5
                        },
                        new
                        {
                            ChordId = 6,
                            ChordName = "D Minor",
                            ImageUrl = "https://chordify.net/img/diagrams/piano/D_min.png",
                            IsMajor = false,
                            IsNatural = true,
                            MusicalKeyId = 1
                        });
                });

            modelBuilder.Entity("EasyChords.Models.MusicalKey", b =>
                {
                    b.Property<int>("MusicalKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMajor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNatural")
                        .HasColumnType("bit");

                    b.Property<string>("MusicalKeyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusicalKeyId");

                    b.ToTable("MusicalKeys");

                    b.HasData(
                        new
                        {
                            MusicalKeyId = 1,
                            IsMajor = true,
                            IsNatural = true,
                            MusicalKeyName = "C Major"
                        },
                        new
                        {
                            MusicalKeyId = 2,
                            IsMajor = false,
                            IsNatural = true,
                            MusicalKeyName = "C Minor"
                        },
                        new
                        {
                            MusicalKeyId = 3,
                            IsMajor = true,
                            IsNatural = false,
                            MusicalKeyName = "C# Major"
                        },
                        new
                        {
                            MusicalKeyId = 4,
                            IsMajor = false,
                            IsNatural = false,
                            MusicalKeyName = "C# Minor"
                        },
                        new
                        {
                            MusicalKeyId = 5,
                            IsMajor = true,
                            IsNatural = true,
                            MusicalKeyName = "D Major"
                        });
                });

            modelBuilder.Entity("EasyChords.Models.Chord", b =>
                {
                    b.HasOne("EasyChords.Models.MusicalKey", "MusicalKey")
                        .WithMany("Chords")
                        .HasForeignKey("MusicalKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
